import datetime
import codercore
import sqlalchemy as sa
from alembic import context, op
from codercore.lib.encrypt import hash_plaintext

from skaf.db.alembic.util import get_table_metadata_from_db

"""user table

Revision ID: ec2afe0b37d2
Revises: 
Create Date: 2019-12-04 17:23:18.551355

"""

# revision identifiers, used by Alembic.
revision = 'ec2afe0b37d2'
down_revision = None
branch_labels = None
depends_on = None

dummy_user = {
    "id": "3ea6088d-af8e-42f1-b866-7f522f58765b",
    "firstname": "Rik",
    "lastname": "van der Werf",
    "email": "rikvanderwerf@skaf.app",
    "date_created": datetime.datetime.utcnow() - datetime.timedelta(weeks=4),
}

dummy_user["password_hash"], dummy_user["password_salt"] = hash_plaintext(
    "testing123")

def create_dummy_data():
    user_table = get_table_metadata_from_db('user')
    op.bulk_insert(user_table, [dummy_user])

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
        sa.Column('id', codercore.db.type.UUID(length=36), nullable=False),
        sa.Column('email', sa.String(length=500), nullable=False),
        sa.Column('password_hash', sa.String(length=119), nullable=False),
        sa.Column('password_salt', sa.String(length=29), nullable=False),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###

    if context.config.get_main_option("environment") == "develop":
        create_dummy_data()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    # ### end Alembic commands ###